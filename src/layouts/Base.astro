---
import Logo from '../components/Logo.vue';
import ToggleTheme from '../components/ToggleTheme.vue';
import config from '../data/config.js';
import '../styles/index.scss';

export interface Props {
	title?: string;
	description?: string;
	canonicalURL?: URL | string;
	image?: string;
  showLogo?: boolean;
}

const title = Astro.props.title || config.title;
const description = Astro.props.description || config.description;
const canonicalURL = Astro.props.canonicalURL || config.url;
const image = Astro.props.image || new URL('./social.png', Astro.site);
const showLogo = Astro.props.showLogo;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
  
  <!-- Primary Meta Tags -->
  <title>{title || config.title}</title>
  <meta name="title" content={title || config.title} />
  <meta name="description" content={description || config.description} />
  <link rel="icon" type="image/png" href="favicon.png">
  <!-- Canonical -->
  <link rel="canonical" href={canonicalURL}>

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={image} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={image} />
</head>

<body>
    <header class="header">
        <div class="header__left">
            { showLogo && <Logo />}
        </div>

        <div class="header__right">
            <ul class="nav">
              <li class="nav-item">
                  <!-- <g-link v-if="$route.path === '/'" to="/about">About</g-link> -->
                  <!-- <g-link v-if="$route.path === '/about'" to="/">Home</g-link> -->
              </li>
            </ul>

            <ToggleTheme />
        </div>
    </header>

    <main>
        <slot />
    </main>
    
    <footer class="footer">
        <small class="footer__copyright">Copyright &copy; 2020-{ new Date().getFullYear() } fyodor.io</small>
    </footer>

    <script>
    // Add dark / light detection that runs before Vue.js load. Borrowed from overreacted.io
    declare const window: any;

    (function() {
        window.__onThemeChange = function() {};
        function setTheme(newTheme) {
        window.__theme = newTheme;
        preferredTheme = newTheme;
        document.body.setAttribute('data-theme', newTheme);
        window.__onThemeChange(newTheme);
        }

        var preferredTheme;
        try {
        preferredTheme = localStorage.getItem('theme');
        } catch (err) { }

        window.__setPreferredTheme = function(newTheme) {
        setTheme(newTheme);
        try {
            localStorage.setItem('theme', newTheme);
        } catch (err) {}
        }

        var darkQuery = window.matchMedia('(prefers-color-scheme: dark)');
        darkQuery.addListener(function(e) {
        window.__setPreferredTheme(e.matches ? 'dark' : 'light')
        });

        setTheme(preferredTheme || (darkQuery.matches ? 'dark' : 'light'));
    })();
    </script>
</body>
</html>

<style lang="scss">
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      min-height: var(--header-height);
      padding: 0 calc(var(--space) / 2);
      top:0;
      z-index: 10;
    
      &__left,
      &__right {
        display: flex;
        align-items: center;
      }
    
      .nav {
        list-style: none;
        margin: 0 12px 0 0;
        padding: 0;
        .nav-item {
          margin: 0;
          padding: 0;
        }
      }
    
      @media screen and (min-width: 1300px) {
        //Make header sticky for large screens
        position: sticky;
        width: 100%;
      }
    }
    
    .main {
      margin: 0 auto;
      padding: 1.5vw 15px 0;
    }
    
    // make content box full-width when on mobile
    @media screen and (max-width: 650px) {
      .main {
        padding-left: 0;
        padding-right: 0;
      }
    }
    
    .footer {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: calc(var(--space) / 2);
      text-align: center;
      font-size: .8em;
    }
    </style>